@using LongQin.Models
@using LongQin.Infrastructures
@{
    ViewBag.Title = "已办工作";
}
<blockquote class="layui-elem-quote">
    <span class="layui-breadcrumb">
        <a href="/Work/WorkFlow/Completed">已办工作</a>
    </span>
</blockquote>
<script type="text/html" id="toolbar">
    <div class="layui-inline" id="dateRange">
        <div class="layui-inline">
            <input type="text" autocomplete="off" id="beginDate" placeholder="开始日期" class="layui-input" style="height:30px;width:110px">
        </div>
        <div class="layui-inline">-</div>
        <div class="layui-inline">
            <input type="text" autocomplete="off" id="endDate" placeholder="结束日期" class="layui-input" style="height:30px;width:110px">
        </div>
    </div>
    <button type="button" class="layui-btn layui-btn-primary layui-btn-sm" lay-event="search" style="padding:0px 3px 0px 5px">
        <i class="layui-icon">&#xe615;</i>
    </button>
</script>
<table class="layui-hide" id="tb" lay-filter="tb"></table>

<script type="text/html" id="bar">
    <a class="layui-btn layui-btn-xs" lay-event="details">明细</a>
</script>

<script>
    layui.use(['table', 'laydate'], function () {
        var table = layui.table;
        var laydate = layui.laydate;

        table.render({
            elem: '#tb',
            url: '/Work/WorkFlow/GetProcessList/',
            cellMinWidth: 80,
            toolbar: '#toolbar', //开启头部工具栏，并为其绑定左侧模板
            where: { status: 0 },
            defaultToolbar: [],
            cols: [[
                { field: 'ProcessId', width: 80, title: 'ID', sort: true },
                {
                    fixed: 'right', title: '操作', width: 120, templet: function (d) {
                        var btn = '<a class="layui-btn layui-btn-xs" lay-event="details">明细</a>';
                        if (d.Creator == "@CookieData.CurrentUser.UserId") {
                            btn += '<a class="layui-btn layui-btn-xs" lay-event="disableWork">作废</a>';
                        }
                        return btn;
                    }
                },
                { field: 'NodeName', title: '任务' },
                { field: 'CreatorName', title: '发起人' },
                { field: 'CreateTime', title: '发起时间' },
                { field: 'DepartmentName', title: '部门' }
            ]]
          , page: true
        });

        //头工具栏事件
        table.on('toolbar(tb)', function (obj) {
            switch (obj.event) {
                case 'search':
                    var beginDate = $('#beginDate').val();
                    var endDate = $('#endDate').val();
                    table.reload('tb', {
                        where: { //设定异步数据接口的额外参数，任意设
                            beginDate: beginDate
                            , endDate: endDate
                            , status: 0
                        }
                        , page: {
                            curr: 1 //重新从第 1 页开始
                        }
                    })
                    //日期范围
                    laydate.render({
                        elem: '#dateRange'
                        //设置开始日期、日期日期的 input 选择器
                        //数组格式为 2.6.6 开始新增，之前版本直接配置 true 或任意分割字符即可
                        , range: ['#beginDate', '#endDate']
                    });
                    $('#beginDate').val(beginDate);
                    $('#endDate').val(endDate);
                    break;
            };
        });

        //日期范围
        laydate.render({
            elem: '#dateRange'
            //设置开始日期、日期日期的 input 选择器
            //数组格式为 2.6.6 开始新增，之前版本直接配置 true 或任意分割字符即可
            , range: ['#beginDate', '#endDate']
        });

        //监听行工具事件
        table.on('tool(tb)', function (obj) {
            var data = obj.data;
            if (obj.event === 'details') {
                location.href = '@Url.Action("Details", "WorkFlow", new { area="Work"})' + '?workId=' + data.WorkId + '&processId=' + data.ProcessId + '&flowId=' + data.FlowId;
            }
            else if (obj.event === 'disableWork') {
                $.ajax({
                    url: "/Work/WorkFlow/DeleteWork",    //后台数据请求地址
                    type: "post",
                    data: { workId: data.WorkId },
                    async: false,
                    success: function (slt) {
                        if (slt && slt.success) {
                            layer.msg('处理成功');
                            obj.del();
                        }
                        else {
                            layer.msg(slt.message || '操作失败，请重试');
                        }
                    }
                });
            }
        });
    });
</script>
