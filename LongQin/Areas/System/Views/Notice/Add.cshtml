@using LongQin.Models
@using LongQin.Infrastructures
@model LongQin.Models.Notice

@{
    ViewBag.Title = Model.NoticeId == 0 ? "发布公告" : "编辑公告";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<blockquote class="layui-elem-quote">
    <span class="layui-breadcrumb">
        <a href="/System/Notice/Index">公告管理</a>
        <a><cite>@ViewBag.Title</cite></a>
    </span>
</blockquote>
<form class="layui-form" id="mainForm" method="post" action="/System/Notice/Set" lay-filter="mainform">
    @Html.HiddenFor(m => m.NoticeId)
    <div class="layui-form-item">
        <label class="layui-form-label"><span style="color:red">*</span>标题</label>
        <div class="layui-input-block">
            <input type="text" name="Title" value="@Model.Title" lay-verify="required|max" lay-reqtext="请填写标题" lay-max="25" lay-pretext="标题" placeholder="请填写标题" autocomplete="off" class="layui-input">
        </div>
    </div>
    <div class="layui-form-item">
        <label class="layui-form-label">内容</label>
        <div class="layui-input-block">
            <textarea id="Content" name="Content" class="layui-hide editorsrv">@Model.Content</textarea>
        </div>
    </div>
    <div class="layui-form-item">
        <label class="layui-form-label"><span style="color:red">*</span>紧急程度</label>
        <div class="layui-input-block">
            <select name="NoticeLevel" id="NoticeLevel" lay-verify="required" lay-reqtext="请选择紧急程度">
                <option value="">请选择紧急程度</option>
                <option value="1">普通</option>
                <option value="2">紧急</option>
                <option value="3">加急</option>
            </select>
        </div>
    </div>
    <div class="layui-form-item">
        <label class="layui-form-label"><span style="color:red">*</span>保密等级</label>
        <div class="layui-input-block">
            <select name="Security" id="Security" lay-verify="required" lay-reqtext="请选择保密等级">
                <option value="">请选择保密等级</option>
                <option value="1">公开</option>
                <option value="2">内部公开</option>
                <option value="3">机密</option>
            </select>
        </div>
    </div>
    <div class="layui-form-item">
        <label class="layui-form-label">附件</label>
        <div class="layui-input-block">
            <div class="layui-upload">
                <input type="text" name="Attachments" id="Attachments" class="layui-input" value="@Model.Attachments" readonly />
                <button type="button" class="layui-btn layui-btn-normal" id="filesBtn">选择多文件</button>
                <div class="layui-upload-list">
                    <table class="layui-table">
                        <colgroup>
                            <col style="min-width: 100px;">
                            <col width="150">
                            <col width="260">
                            <col width="150">
                        </colgroup>
                        <thead>
                        <th>文件名</th>
                        <th>大小</th>
                        <th>上传进度</th>
                        <th>操作</th>
                        </thead>
                        <tbody id="filesList"></tbody>
                    </table>
                </div>
                <button type="button" class="layui-btn" id="uploadBtn">开始上传</button>
            </div>
        </div>
    </div>
    <div class="layui-form-item">
        <div class="layui-input-block">
            <button type="submit" class="layui-btn" lay-submit="" lay-filter="submitBtn">立即提交</button>
        </div>
    </div>
</form>

@section Bottom{
    <script src="~/Content/formdesigner/tinymce/tinymce.min.js"></script>
    <script>
        layui.use(['form'], function () {
            var form = layui.form
                , $ = layui.jquery, layer = layui.layer;
            var upload = layui.upload;
            var element = layui.element;
            var $ = layui.$;

            if ("@Model.NoticeLevel" != "0"){
                $("#NoticeLevel").val("@Model.NoticeLevel");
            }
            if ("@Model.Security" != "0"){
                $("#Security").val("@Model.Security");
            }
            form.render('select');

            //自定义验证规则
            form.verify({
                max: function (value, item) {
                    var maxLen = item.getAttribute('lay-max');
                    var pretext = item.getAttribute('lay-pretext');
                    if (value.length > maxLen) {
                        return pretext + '不能大于' + maxLen + '个字符的长度';
                    }
                }
            });

            tinymce.init({
                selector: '#Content',
                language: 'zh_CN'
            })

            //监听提交
            form.on('submit(submitBtn)', function (data) {
                tinyMCE.triggerSave();
                $("#mainForm").ajaxSubmit({
                    success: function (slt) {
                        if (slt && slt.success) {
                            location.href = '@Url.Action("index", "notice", new { area="system"})';
                        }
                        else {
                            layer.msg(slt.message || '操作失败，请重试。');
                        }
                    }
                });
                return false;
            });

            // 制作多文件上传表格
            var uploadListIns = upload.render({
                elem: '#filesBtn',
                elemList: $('#filesList'), // 列表元素对象
                url: '/System/Notice/UploadFiles', // 此处用的是第三方的 http 请求演示，实际使用时改成您自己的上传接口即可。
                accept: 'file',
                size: 5000,
                multiple: true,
                number: 5,
                auto: false,
                bindAction: '#uploadBtn',
                choose: function (obj) {
                    var that = this;
                    var files = this.files = obj.pushFile(); // 将每次选择的文件追加到文件队列
                    // 读取本地文件
                    obj.preview(function (index, file, result) {
                        var tr = $(['<tr id="upload-' + index + '">',
                        '<td>' + file.name + '</td>',
                        '<td>' + (file.size / 1024).toFixed(1) + 'kb</td>',
                        '<td><div class="layui-progress" lay-filter="progress-demo-' + index + '"><div class="layui-progress-bar" lay-percent=""></div></div></td>',
                            '<td>',
                            '<button class="layui-btn layui-btn-xs demo-reload layui-hide">重传</button>',
                            '<button class="layui-btn layui-btn-xs layui-btn-danger demo-delete">删除</button>',
                            '</td>',
                            '</tr>'].join(''));

                        // 单个重传
                        tr.find('.demo-reload').on('click', function () {
                            obj.upload(index, file);
                        });

                        // 删除
                        tr.find('.demo-delete').on('click', function () {
                            delete files[index]; // 删除对应的文件
                            tr.remove(); // 删除表格行
                            // 清空 input file 值，以免删除后出现同名文件不可选
                            uploadListIns.config.elem.next()[0].value = '';
                        });

                        that.elemList.append(tr);
                        element.render('progress'); // 渲染新加的进度条组件
                    });
                },
                done: function (res, index, upload) { // 成功的回调
                    var that = this;
                    // if(res.code == 0){ // 上传成功
                    var tr = that.elemList.find('tr#upload-' + index)
                    var tds = tr.children();
                    tds.eq(3).html(''); // 清空操作
                    delete this.files[index]; // 删除文件队列已经上传成功的文件

                    // 回写隐藏域
                    var filesStr = $('#Attachments').val();
                    if (!filesStr) {
                        $('#Attachments').val(res.data);
                    }
                    else {
                        $('#Attachments').val(filesStr + ',' + res.data);
                    }
                    return;
                },
                allDone: function (obj) { // 多文件上传完毕后的状态回调
                    //console.log(obj)
                },
                error: function (index, upload) { // 错误回调
                    var that = this;
                    var tr = that.elemList.find('tr#upload-' + index);
                    var tds = tr.children();
                    // 显示重传
                    tds.eq(3).find('.demo-reload').removeClass('layui-hide');
                },
                progress: function (n, elem, e, index) { // 注意：index 参数为 layui 2.6.6 新增
                    element.progress('progress-demo-' + index, n + '%'); // 执行进度条。n 即为返回的进度百分比
                }
            });
        });

    </script>
}

